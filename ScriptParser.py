#Copyright (c) 2023 Sato Nobuhiro
#All rights reserved.
#Redistribution of this software in any form without permission from the rights holder is not permitted.
#IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


import sys
import time



KEYCODE = {
    "0": b'\x00\x00\x27\x00\x00\x00\x00\x00',
    "1": b'\x00\x00\x1E\x00\x00\x00\x00\x00',
    "2": b'\x00\x00\x1F\x00\x00\x00\x00\x00',
    "3": b'\x00\x00\x20\x00\x00\x00\x00\x00',
    "4": b'\x00\x00\x21\x00\x00\x00\x00\x00',
    "5": b'\x00\x00\x22\x00\x00\x00\x00\x00',
    "6": b'\x00\x00\x23\x00\x00\x00\x00\x00',
    "7": b'\x00\x00\x24\x00\x00\x00\x00\x00',
    "8": b'\x00\x00\x25\x00\x00\x00\x00\x00',
    "9": b'\x00\x00\x26\x00\x00\x00\x00\x00',
    "a": b'\x00\x00\x04\x00\x00\x00\x00\x00',
    "b": b'\x00\x00\x05\x00\x00\x00\x00\x00',
    "c": b'\x00\x00\x06\x00\x00\x00\x00\x00',
    "d": b'\x00\x00\x07\x00\x00\x00\x00\x00',
    "e": b'\x00\x00\x08\x00\x00\x00\x00\x00',
    "f": b'\x00\x00\x09\x00\x00\x00\x00\x00',
    "g": b'\x00\x00\x0A\x00\x00\x00\x00\x00',
    "h": b'\x00\x00\x0B\x00\x00\x00\x00\x00',
    "i": b'\x00\x00\x0C\x00\x00\x00\x00\x00',
    "j": b'\x00\x00\x0D\x00\x00\x00\x00\x00',
    "k": b'\x00\x00\x0E\x00\x00\x00\x00\x00',
    "l": b'\x00\x00\x0F\x00\x00\x00\x00\x00',
    "m": b'\x00\x00\x10\x00\x00\x00\x00\x00',
    "n": b'\x00\x00\x11\x00\x00\x00\x00\x00',
    "o": b'\x00\x00\x12\x00\x00\x00\x00\x00',
    "p": b'\x00\x00\x13\x00\x00\x00\x00\x00',
    "q": b'\x00\x00\x14\x00\x00\x00\x00\x00',
    "r": b'\x00\x00\x15\x00\x00\x00\x00\x00',
    "s": b'\x00\x00\x16\x00\x00\x00\x00\x00',
    "t": b'\x00\x00\x17\x00\x00\x00\x00\x00',
    "u": b'\x00\x00\x18\x00\x00\x00\x00\x00',
    "v": b'\x00\x00\x19\x00\x00\x00\x00\x00',
    "w": b'\x00\x00\x1A\x00\x00\x00\x00\x00',
    "x": b'\x00\x00\x1B\x00\x00\x00\x00\x00',
    "y": b'\x00\x00\x1C\x00\x00\x00\x00\x00',
    "z": b'\x00\x00\x1D\x00\x00\x00\x00\x00',
    "A": b'\x20\x00\x04\x00\x00\x00\x00\x00',
    "B": b'\x20\x00\x05\x00\x00\x00\x00\x00',
    "C": b'\x20\x00\x06\x00\x00\x00\x00\x00',
    "D": b'\x20\x00\x07\x00\x00\x00\x00\x00',
    "E": b'\x20\x00\x08\x00\x00\x00\x00\x00',
    "F": b'\x20\x00\x09\x00\x00\x00\x00\x00',
    "G": b'\x20\x00\x0A\x00\x00\x00\x00\x00',
    "H": b'\x20\x00\x0B\x00\x00\x00\x00\x00',
    "I": b'\x20\x00\x0C\x00\x00\x00\x00\x00',
    "J": b'\x20\x00\x0D\x00\x00\x00\x00\x00',
    "K": b'\x20\x00\x0E\x00\x00\x00\x00\x00',
    "L": b'\x20\x00\x0F\x00\x00\x00\x00\x00',
    "M": b'\x20\x00\x10\x00\x00\x00\x00\x00',
    "N": b'\x20\x00\x11\x00\x00\x00\x00\x00',
    "O": b'\x20\x00\x12\x00\x00\x00\x00\x00',
    "P": b'\x20\x00\x13\x00\x00\x00\x00\x00',
    "Q": b'\x20\x00\x14\x00\x00\x00\x00\x00',
    "R": b'\x20\x00\x15\x00\x00\x00\x00\x00',
    "S": b'\x20\x00\x16\x00\x00\x00\x00\x00',
    "T": b'\x20\x00\x17\x00\x00\x00\x00\x00',
    "U": b'\x20\x00\x18\x00\x00\x00\x00\x00',
    "V": b'\x20\x00\x19\x00\x00\x00\x00\x00',
    "W": b'\x20\x00\x1A\x00\x00\x00\x00\x00',
    "X": b'\x20\x00\x1B\x00\x00\x00\x00\x00',
    "Y": b'\x20\x00\x1C\x00\x00\x00\x00\x00',
    "Z": b'\x20\x00\x1D\x00\x00\x00\x00\x00',
    "-": b'\x00\x00\x2D\x00\x00\x00\x00\x00',
    "^": b'\x00\x00\x2E\x00\x00\x00\x00\x00',
    "@": b'\x00\x00\x2F\x00\x00\x00\x00\x00',
    "[": b'\x00\x00\x30\x00\x00\x00\x00\x00',
    "]": b'\x00\x00\x32\x00\x00\x00\x00\x00',
    ";": b'\x00\x00\x33\x00\x00\x00\x00\x00',
    ":": b'\x00\x00\x34\x00\x00\x00\x00\x00',
    ",": b'\x00\x00\x36\x00\x00\x00\x00\x00',
    ".": b'\x00\x00\x37\x00\x00\x00\x00\x00',
    "/": b'\x00\x00\x38\x00\x00\x00\x00\x00',
    "\\": b'\x00\x00\x87\x00\x00\x00\x00\x00', #BackSlash
    "!": b'\x20\x00\x1E\x00\x00\x00\x00\x00',
    "\"": b'\x20\x00\x1F\x00\x00\x00\x00\x00', #Double Quote
    "#": b'\x20\x00\x20\x00\x00\x00\x00\x00',
    "$": b'\x20\x00\x21\x00\x00\x00\x00\x00',
    "%": b'\x20\x00\x22\x00\x00\x00\x00\x00',
    "&": b'\x20\x00\x23\x00\x00\x00\x00\x00',
    "'": b'\x20\x00\x24\x00\x00\x00\x00\x00',
    "(": b'\x20\x00\x25\x00\x00\x00\x00\x00',
    ")": b'\x20\x00\x26\x00\x00\x00\x00\x00',
    "=": b'\x20\x00\x2D\x00\x00\x00\x00\x00',
    "~": b'\x20\x00\x2E\x00\x00\x00\x00\x00',
    "`": b'\x20\x00\x2F\x00\x00\x00\x00\x00',
    "{": b'\x20\x00\x30\x00\x00\x00\x00\x00',
    "}": b'\x20\x00\x32\x00\x00\x00\x00\x00',
    "+": b'\x20\x00\x33\x00\x00\x00\x00\x00',
    "*": b'\x20\x00\x34\x00\x00\x00\x00\x00',
    "<": b'\x20\x00\x36\x00\x00\x00\x00\x00',
    ">": b'\x20\x00\x37\x00\x00\x00\x00\x00',
    "?": b'\x20\x00\x38\x00\x00\x00\x00\x00',
    "_": b'\x20\x00\x87\x00\x00\x00\x00\x00',
    "|": b'\x20\x00\x89\x00\x00\x00\x00\x00',
    "ENTER": b'\x00\x00\x28\x00\x00\x00\x00\x00',
    "ESCAPE": b'\x00\x00\x29\x00\x00\x00\x00\x00',
    "BACKSPACE": b'\x00\x00\x2A\x00\x00\x00\x00\x00',
    "DELETE": b'\x00\x00\x4C\x00\x00\x00\x00\x00',
    "TAB": b'\x00\x00\x2B\x00\x00\x00\x00\x00',
    "CAPSLOCK": b'\x00\x00\x39\x00\x00\x00\x00\x00',
    "PRINTSCREEN": b'\x00\x00\x46\x00\x00\x00\x00\x00',
    "SCROLLLOCK": b'\x00\x00\x47\x00\x00\x00\x00\x00',
    "NUMLOCK": b'\x00\x00\x53\x00\x00\x00\x00\x00',
    "PAUSE": b'\x00\x00\x48\x00\x00\x00\x00\x00',
    "INSERT": b'\x00\x00\x49\x00\x00\x00\x00\x00',
    "APP": b'\x00\x00\x65\x00\x00\x00\x00\x00',
    "SPACE": b'\x00\x00\x2C\x00\x00\x00\x00\x00',
    " ": b'\x00\x00\x2C\x00\x00\x00\x00\x00',
    "F1": b'\x00\x00\x3A\x00\x00\x00\x00\x00',
    "F2": b'\x00\x00\x3B\x00\x00\x00\x00\x00',
    "F3": b'\x00\x00\x3C\x00\x00\x00\x00\x00',
    "F4": b'\x00\x00\x3D\x00\x00\x00\x00\x00',
    "F5": b'\x00\x00\x3E\x00\x00\x00\x00\x00',
    "F6": b'\x00\x00\x3F\x00\x00\x00\x00\x00',
    "F7": b'\x00\x00\x40\x00\x00\x00\x00\x00',
    "F8": b'\x00\x00\x41\x00\x00\x00\x00\x00',
    "F9": b'\x00\x00\x42\x00\x00\x00\x00\x00',
    "F10": b'\x00\x00\x43\x00\x00\x00\x00\x00',
    "F11": b'\x00\x00\x44\x00\x00\x00\x00\x00',
    "F12": b'\x00\x00\x45\x00\x00\x00\x00\x00',
    "HOME": b'\x00\x00\x4A\x00\x00\x00\x00\x00',
    "END": b'\x00\x00\x4D\x00\x00\x00\x00\x00',
    "PAGEUP": b'\x00\x00\x4B\x00\x00\x00\x00\x00',
    "PAGEDOWN": b'\x00\x00\x4E\x00\x00\x00\x00\x00',
    "RIGHT": b'\x00\x00\x4F\x00\x00\x00\x00\x00',
    "LEFT": b'\x00\x00\x50\x00\x00\x00\x00\x00',
    "UP": b'\x00\x00\x52\x00\x00\x00\x00\x00',
    "DOWN": b'\x00\x00\x51\x00\x00\x00\x00\x00',
    "HIRAKANA": b'\x00\x00\x88\x00\x00\x00\x00\x00',        #Japanese Keyboard Function
    "CONVERT": b'\x00\x00\x8A\x00\x00\x00\x00\x00',         #Japanese Keyboard Function
    "NONCONVERT": b'\x00\x00\x8B\x00\x00\x00\x00\x00',      #Japanese Keyboard Function
    "HANKAKUZENKAKU": b'\x00\x00\x35\x00\x00\x00\x00\x00',  #Japanese Keyboard Function
    "IMEON":b'\x00\x00\x90\x00\x00\x00\x00\x00',            #Japanese Keyboard Function
    "IMEOFF":b'\x00\x00\x91\x00\x00\x00\x00\x00',           #Japanese Keyboard Function
    "GUI": b'\x80\x00\x00\x00\x00\x00\x00\x00',
    "ALT": b'\x40\x00\x00\x00\x00\x00\x00\x00',
    "SHIFT": b'\x20\x00\x00\x00\x00\x00\x00\x00',
    "CTRL": b'\x10\x00\x00\x00\x00\x00\x00\x00',
    "LGUI": b'\x80\x00\x00\x00\x00\x00\x00\x00',
    "LALT": b'\x40\x00\x00\x00\x00\x00\x00\x00',
    "LSHIFT": b'\x20\x00\x00\x00\x00\x00\x00\x00',
    "LCTRL": b'\x10\x00\x00\x00\x00\x00\x00\x00',
    "RGUI": b'\x08\x00\x00\x00\x00\x00\x00\x00',
    "RALT": b'\x04\x00\x00\x00\x00\x00\x00\x00',
    "RSHIFT": b'\x02\x00\x00\x00\x00\x00\x00\x00',
    "RCTRL": b'\x01\x00\x00\x00\x00\x00\x00\x00'
}

Number = {
    "0": b'\x00\x00\x27\x00\x00\x00\x00\x00',
    "1": b'\x00\x00\x1E\x00\x00\x00\x00\x00',
    "2": b'\x00\x00\x1F\x00\x00\x00\x00\x00',
    "3": b'\x00\x00\x20\x00\x00\x00\x00\x00',
    "4": b'\x00\x00\x21\x00\x00\x00\x00\x00',
    "5": b'\x00\x00\x22\x00\x00\x00\x00\x00',
    "6": b'\x00\x00\x23\x00\x00\x00\x00\x00',
    "7": b'\x00\x00\x24\x00\x00\x00\x00\x00',
    "8": b'\x00\x00\x25\x00\x00\x00\x00\x00',
    "9": b'\x00\x00\x26\x00\x00\x00\x00\x00'
}

Alphabet = {
    "a": b'\x00\x00\x04\x00\x00\x00\x00\x00',
    "b": b'\x00\x00\x05\x00\x00\x00\x00\x00',
    "c": b'\x00\x00\x06\x00\x00\x00\x00\x00',
    "d": b'\x00\x00\x07\x00\x00\x00\x00\x00',
    "e": b'\x00\x00\x08\x00\x00\x00\x00\x00',
    "f": b'\x00\x00\x09\x00\x00\x00\x00\x00',
    "g": b'\x00\x00\x0A\x00\x00\x00\x00\x00',
    "h": b'\x00\x00\x0B\x00\x00\x00\x00\x00',
    "i": b'\x00\x00\x0C\x00\x00\x00\x00\x00',
    "j": b'\x00\x00\x0D\x00\x00\x00\x00\x00',
    "k": b'\x00\x00\x0E\x00\x00\x00\x00\x00',
    "l": b'\x00\x00\x0F\x00\x00\x00\x00\x00',
    "m": b'\x00\x00\x10\x00\x00\x00\x00\x00',
    "n": b'\x00\x00\x11\x00\x00\x00\x00\x00',
    "o": b'\x00\x00\x12\x00\x00\x00\x00\x00',
    "p": b'\x00\x00\x13\x00\x00\x00\x00\x00',
    "q": b'\x00\x00\x14\x00\x00\x00\x00\x00',
    "r": b'\x00\x00\x15\x00\x00\x00\x00\x00',
    "s": b'\x00\x00\x16\x00\x00\x00\x00\x00',
    "t": b'\x00\x00\x17\x00\x00\x00\x00\x00',
    "u": b'\x00\x00\x18\x00\x00\x00\x00\x00',
    "v": b'\x00\x00\x19\x00\x00\x00\x00\x00',
    "w": b'\x00\x00\x1A\x00\x00\x00\x00\x00',
    "x": b'\x00\x00\x1B\x00\x00\x00\x00\x00',
    "y": b'\x00\x00\x1C\x00\x00\x00\x00\x00',
    "z": b'\x00\x00\x1D\x00\x00\x00\x00\x00',
    "A": b'\x20\x00\x04\x00\x00\x00\x00\x00',
    "B": b'\x20\x00\x05\x00\x00\x00\x00\x00',
    "C": b'\x20\x00\x06\x00\x00\x00\x00\x00',
    "D": b'\x20\x00\x07\x00\x00\x00\x00\x00',
    "E": b'\x20\x00\x08\x00\x00\x00\x00\x00',
    "F": b'\x20\x00\x09\x00\x00\x00\x00\x00',
    "G": b'\x20\x00\x0A\x00\x00\x00\x00\x00',
    "H": b'\x20\x00\x0B\x00\x00\x00\x00\x00',
    "I": b'\x20\x00\x0C\x00\x00\x00\x00\x00',
    "J": b'\x20\x00\x0D\x00\x00\x00\x00\x00',
    "K": b'\x20\x00\x0E\x00\x00\x00\x00\x00',
    "L": b'\x20\x00\x0F\x00\x00\x00\x00\x00',
    "M": b'\x20\x00\x10\x00\x00\x00\x00\x00',
    "N": b'\x20\x00\x11\x00\x00\x00\x00\x00',
    "O": b'\x20\x00\x12\x00\x00\x00\x00\x00',
    "P": b'\x20\x00\x13\x00\x00\x00\x00\x00',
    "Q": b'\x20\x00\x14\x00\x00\x00\x00\x00',
    "R": b'\x20\x00\x15\x00\x00\x00\x00\x00',
    "S": b'\x20\x00\x16\x00\x00\x00\x00\x00',
    "T": b'\x20\x00\x17\x00\x00\x00\x00\x00',
    "U": b'\x20\x00\x18\x00\x00\x00\x00\x00',
    "V": b'\x20\x00\x19\x00\x00\x00\x00\x00',
    "W": b'\x20\x00\x1A\x00\x00\x00\x00\x00',
    "X": b'\x20\x00\x1B\x00\x00\x00\x00\x00',
    "Y": b'\x20\x00\x1C\x00\x00\x00\x00\x00',
    "Z": b'\x20\x00\x1D\x00\x00\x00\x00\x00'
}

#記号キーの一覧
Symbol= {
    "-": b'\x00\x00\x2D\x00\x00\x00\x00\x00',
    "^": b'\x00\x00\x2E\x00\x00\x00\x00\x00',
    "@": b'\x00\x00\x2F\x00\x00\x00\x00\x00',
    "[": b'\x00\x00\x30\x00\x00\x00\x00\x00',
    "]": b'\x00\x00\x32\x00\x00\x00\x00\x00',
    ";": b'\x00\x00\x33\x00\x00\x00\x00\x00',
    ":": b'\x00\x00\x34\x00\x00\x00\x00\x00',
    ",": b'\x00\x00\x36\x00\x00\x00\x00\x00',
    ".": b'\x00\x00\x37\x00\x00\x00\x00\x00',
    "/": b'\x00\x00\x38\x00\x00\x00\x00\x00',
    "\\": b'\x00\x00\x87\x00\x00\x00\x00\x00', #BackSlash
    "!": b'\x20\x00\x1E\x00\x00\x00\x00\x00',
    "\"": b'\x20\x00\x1F\x00\x00\x00\x00\x00', #Double Quote
    "#": b'\x20\x00\x20\x00\x00\x00\x00\x00',
    "$": b'\x20\x00\x21\x00\x00\x00\x00\x00',
    "%": b'\x20\x00\x22\x00\x00\x00\x00\x00',
    "&": b'\x20\x00\x23\x00\x00\x00\x00\x00',
    "'": b'\x20\x00\x24\x00\x00\x00\x00\x00',
    "(": b'\x20\x00\x25\x00\x00\x00\x00\x00',
    ")": b'\x20\x00\x26\x00\x00\x00\x00\x00',
    "=": b'\x20\x00\x2D\x00\x00\x00\x00\x00',
    "~": b'\x20\x00\x2E\x00\x00\x00\x00\x00',
    "`": b'\x20\x00\x2F\x00\x00\x00\x00\x00',
    "{": b'\x20\x00\x30\x00\x00\x00\x00\x00',
    "}": b'\x20\x00\x32\x00\x00\x00\x00\x00',
    "+": b'\x20\x00\x33\x00\x00\x00\x00\x00',
    "*": b'\x20\x00\x34\x00\x00\x00\x00\x00',
    "<": b'\x20\x00\x36\x00\x00\x00\x00\x00',
    ">": b'\x20\x00\x37\x00\x00\x00\x00\x00',
    "?": b'\x20\x00\x38\x00\x00\x00\x00\x00',
    "_": b'\x20\x00\x87\x00\x00\x00\x00\x00',
    "|": b'\x20\x00\x89\x00\x00\x00\x00\x00',
}

#文字入力ではなく、動作を主体としたキーの一覧(正しSpace, Enter, Tab等もこちらに含まれる。)
SpecialKey = {
    "ENTER": b'\x00\x00\x28\x00\x00\x00\x00\x00',
    "ESCAPE": b'\x00\x00\x29\x00\x00\x00\x00\x00',
    "BACKSPACE": b'\x00\x00\x2A\x00\x00\x00\x00\x00',
    "DELETE": b'\x00\x00\x4C\x00\x00\x00\x00\x00',
    "TAB": b'\x00\x00\x2B\x00\x00\x00\x00\x00',
    "CAPSLOCK": b'\x00\x00\x39\x00\x00\x00\x00\x00',
    "PRINTSCREEN": b'\x00\x00\x46\x00\x00\x00\x00\x00',
    "SCROLLLOCK": b'\x00\x00\x47\x00\x00\x00\x00\x00',
    "NUMLOCK": b'\x00\x00\x53\x00\x00\x00\x00\x00',
    "PAUSE": b'\x00\x00\x48\x00\x00\x00\x00\x00',
    "INSERT": b'\x00\x00\x49\x00\x00\x00\x00\x00',
    "APP": b'\x00\x00\x65\x00\x00\x00\x00\x00',
    "SPACE": b'\x00\x00\x2C\x00\x00\x00\x00\x00',
    "F1": b'\x00\x00\x3A\x00\x00\x00\x00\x00',
    "F2": b'\x00\x00\x3B\x00\x00\x00\x00\x00',
    "F3": b'\x00\x00\x3C\x00\x00\x00\x00\x00',
    "F4": b'\x00\x00\x3D\x00\x00\x00\x00\x00',
    "F5": b'\x00\x00\x3E\x00\x00\x00\x00\x00',
    "F6": b'\x00\x00\x3F\x00\x00\x00\x00\x00',
    "F7": b'\x00\x00\x40\x00\x00\x00\x00\x00',
    "F8": b'\x00\x00\x41\x00\x00\x00\x00\x00',
    "F9": b'\x00\x00\x42\x00\x00\x00\x00\x00',
    "F10": b'\x00\x00\x43\x00\x00\x00\x00\x00',
    "F11": b'\x00\x00\x44\x00\x00\x00\x00\x00',
    "F12": b'\x00\x00\x45\x00\x00\x00\x00\x00',
    "HOME": b'\x00\x00\x4A\x00\x00\x00\x00\x00',
    "END": b'\x00\x00\x4D\x00\x00\x00\x00\x00',
    "PAGEUP": b'\x00\x00\x4B\x00\x00\x00\x00\x00',
    "PAGEDOWN": b'\x00\x00\x4E\x00\x00\x00\x00\x00',
    "RIGHT": b'\x00\x00\x4F\x00\x00\x00\x00\x00',
    "LEFT": b'\x00\x00\x50\x00\x00\x00\x00\x00',
    "UP": b'\x00\x00\x52\x00\x00\x00\x00\x00',
    "DOWN": b'\x00\x00\x51\x00\x00\x00\x00\x00',
    
    "HIRAKANA": b'\x00\x00\x88\x00\x00\x00\x00\x00',        #Japanese Keyboard Function
    "CONVERT": b'\x00\x00\x8A\x00\x00\x00\x00\x00',         #Japanese Keyboard Function
    "NONCONVERT": b'\x00\x00\x8B\x00\x00\x00\x00\x00',      #Japanese Keyboard Function
    "HANKAKUZENKAKU": b'\x00\x00\x35\x00\x00\x00\x00\x00',  #Japanese Keyboard Function
    "IMEON":b'\x00\x00\x90\x00\x00\x00\x00\x00',            #Japanese Keyboard Function
    "IMEOFF":b'\x00\x00\x91\x00\x00\x00\x00\x00'            #Japanese Keyboard Function
}

#修飾キー(同時押しに実施されるキーで GUI Shift ALT CTRLの4種類がある)
#GUIはWindowsであればWinキーのことを指す。
#修飾キーはShiftキーをみれば分かるように、全ての修飾キーは左右に用意されている。
#正し通常そこまで意識はしないと思われるので、GUIを指定した場合は\x80つまり左のGUIを使用するようにした。
ModKey = {
    "GUI": b'\x80\x00\x00\x00\x00\x00\x00\x00',
    "ALT": b'\x40\x00\x00\x00\x00\x00\x00\x00',
    "SHIFT": b'\x20\x00\x00\x00\x00\x00\x00\x00',
    "CTRL": b'\x10\x00\x00\x00\x00\x00\x00\x00',

    "LGUI": b'\x80\x00\x00\x00\x00\x00\x00\x00',
    "LALT": b'\x40\x00\x00\x00\x00\x00\x00\x00',
    "LSHIFT": b'\x20\x00\x00\x00\x00\x00\x00\x00',
    "LCTRL": b'\x10\x00\x00\x00\x00\x00\x00\x00',
    
    "RGUI": b'\x08\x00\x00\x00\x00\x00\x00\x00',
    "RALT": b'\x04\x00\x00\x00\x00\x00\x00\x00',
    "RSHIFT": b'\x02\x00\x00\x00\x00\x00\x00\x00',
    "RCTRL": b'\x01\x00\x00\x00\x00\x00\x00\x00'
}


#文頭がSpecialKeyで始まっている場合の関数
def SpecialKeyLine(SplitLine):
    for command in SplitLine:
        KeyStroke(command)

#文頭がSTRINGで始まっている場合の関数
def StringLine(SplitLine):
    if len(SplitLine) >= 2:
        INPUTSTRING = " ".join(SplitLine[1:])
        for SingleChar in INPUTSTRING:
            KeyStroke(SingleChar)

#文頭がModKeyで始まっている場合の関数(5/24要修正、とりあえずは動くがModキーだけの場合の処理が規定されていない)
def ModKeyLine(SplitLine):
    BitOR = 0b00000000
    for command in SplitLine:
        if command == "CTRL":
            BitOR = BitOR | 0b00000001
        elif command == "SHIFT":
            BitOR = BitOR | 0b00000010
        elif command == "ALT":
            BitOR = BitOR | 0b00000100
        elif command == "GUI":
            BitOR = BitOR | 0b00001000

        elif command == "RCTRL":
            BitOR = BitOR | 0b00000001
        elif command == "RSHIFT":
            BitOR = BitOR | 0b00000010
        elif command == "RALT":
            BitOR = BitOR | 0b00000100
        elif command == "RGUI":
            BitOR = BitOR | 0b00001000

        elif command == "LCTRL":
            BitOR = BitOR | 0b00010000
        elif command == "LSHIFT":
            BitOR = BitOR | 0b00100000
        elif command == "LALT":
            BitOR = BitOR | 0b01000000
        elif command == "LGUI":
            BitOR = BitOR | 0b10000000
        
        #Modキー以外のキーがあればそこでKeyStrokeを実行
        #例) ALT GUI A SHIFT
        #     ↑上記の様な列があった場合ALT GUI Aだけで実行される。
        else:
            if (len(command) == 1) or (command in SpecialKey):
                modifiedKey = bytearray(KEYCODE[command])
                modifiedKey[0] = BitOR
                bytes(modifiedKey)
                print(modifiedKey)
                KeyStroke(KeyCode=modifiedKey)
            break
    else:
        #列が修飾キーだけの場合に実行される
        modifiedKey = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00')
        modifiedKey[0] = BitOR
        bytes(modifiedKey)
        print(modifiedKey)
        KeyStroke(KeyCode=modifiedKey)

#DELAY行のための処理
def DelayLine(SplitLine):
    for i, e in enumerate(SplitLine):
        if i == 0:
            pass
        elif (i==1) and (e):
            waitmilli = int(e) / 1000
            time.sleep(waitmilli)

#文字を入力する関数
def KeyStroke(StrokeKey = b'', KeyCode = b''):
    global KEYCODE
    if KeyCode != b'':
        with open('/dev/hidg0', 'rb+') as fd:
            fd.write(KeyCode)

        with open('/dev/hidg0', 'rb+') as fd:
            fd.write(b'\x00\x00\x00\x00\x00\x00\x00\x00')

    else:
        with open('/dev/hidg0', 'rb+') as fd:
            fd.write(KEYCODE[StrokeKey])

        with open('/dev/hidg0', 'rb+') as fd:
            fd.write(b'\x00\x00\x00\x00\x00\x00\x00\x00')



#スクリプトをパースする為の
def ScriptParser(line):
    line = line.replace("\n", "")
    SplitLine = line.split(sep=" ")
    LineFirst = SplitLine[0]

    #文頭がSTRINGで始まっている場合
    if LineFirst in "STRING":
        StringLine(SplitLine)

    #文頭がSpecialKeyで始まっている場合
    elif LineFirst in SpecialKey:
        SpecialKeyLine(SplitLine)

    #文頭が修飾キーで始まっている場合
    elif LineFirst in ModKey:
        ModKeyLine(SplitLine)

    #文頭がDELAY制御コマンドで始まっている場合
    elif LineFirst in "DELAY":
        DelayLine(SplitLine)

    #DuckyScriptの各行は必ず、"STRING"かSpecialCharか修飾キーで始まるはずなのでそれ以外であればエラー
    else:
        print("Ducky Script is Syntax Error", SplitLine[0])

#直接呼び出されたときに起動する関数。
if __name__=='__main__':
    with open(sys.argv[1]) as f:
        for line in f:
            ScriptParser(line)